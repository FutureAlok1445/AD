- create a s3 bucket with default settings
- iam -> roles 
- create a role -> aws service option -> use case as lambda -> next
- S3 Full Access, CloudWatch Full Access, Lambda Full Access Permissions
- Give a role name and create
- create a lambda function with runtime environment as nodejs
- change default execution role -> use an existing -> the role we created earlier -> create function
- go to configuration of lambda function -> trigger -> s3 -> bucket name -> event type (all object create event) -> suffix (.jpg) -> create
- lambda function code:
export const handler = async (event, context) => {
  console.log("Incoming Event:", event);

  const bucket = event.Records[0].s3.bucket.name;
  const filename = decodeURIComponent(event.Records[0].s3.object.key.replace(/\+/g, ''));

  const message = `An Image has been added - ${bucket} -> ${filename}`;
  console.log(message);

  return message;
};
- deploy
- upload a .jpg in s3
- navigate to cloudwatch - log groups - see the log